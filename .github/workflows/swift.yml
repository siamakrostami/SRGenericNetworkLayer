name: Swift Package CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  SCHEME_NAME: SRNetworkManager

jobs:
  test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: '6.0'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Show Swift Version
      run: swift --version
        
    - name: Show Xcode Version
      run: xcodebuild -version
        
    - name: Install Dependencies
      run: |
        brew install swiftlint
        # Add any other dependencies here
        
    - name: SwiftLint
      run: swiftlint lint --reporter github-actions-logging
      
    - name: Build Package
      run: |
        swift build -v
        
    - name: Run Tests
      run: |
        swift test -v --enable-code-coverage
        
    - name: Build for iOS
      run: |
        xcodebuild clean build \
          -scheme ${{ env.SCHEME_NAME }} \
          -destination "platform=iOS Simulator,name=iPhone 15 Pro,OS=18.2" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ONLY_ACTIVE_ARCH=YES
          
    - name: Run iOS Tests
      run: |
        xcodebuild test \
          -scheme ${{ env.SCHEME_NAME }} \
          -destination "platform=iOS Simulator,name=iPhone 15 Pro,OS=18.2" \
          -enableCodeCoverage YES \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Generate Code Coverage Report
      uses: maxep/spm-lcov-action@0.3.1
      
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        swift: true
        swift_project: ${{ env.SCHEME_NAME }}
        
  documentation:
    needs: test
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Generate Documentation
      uses: SwiftDocOrg/swift-doc@main
      with:
        inputs: "Sources"
        module-name: ${{ env.SCHEME_NAME }}
        output: "Documentation"
        
    - name: Upload Documentation
      uses: actions/upload-artifact@v3
      with:
        name: Documentation
        path: Documentation
